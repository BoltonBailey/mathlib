/-
Copyright (c) 2020 Bhavik Mehta. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Bhavik Mehta
-/
import category_theory.limits.types
import category_theory.punit
import category_theory.limits.functor_category

namespace category_theory
noncomputable theory

open category limits

universes v u‚ÇÅ u‚ÇÇ u‚ÇÉ
variables {C : Type v} {C' : Type u‚ÇÇ} {D : Type u‚ÇÉ}
variables [category.{v} C] [category.{v} C'] [category.{v} D]

def left_kan_obj (F : C ‚•§ D) (p : C ‚•§ C') [has_colimits D] :
  C' ‚•§ D :=
{ obj := Œª c', colimit (comma.fst p (functor.from_punit c') ‚ãô F),
  map := Œª X Y f,
  begin
    let Q : comma p (functor.from_punit X) ‚•§ comma p (functor.from_punit Y),
      refine comma.map_right _ { app := Œª _, f },
    refine colimit.desc _ ‚ü®_, Œª K, _, _‚ü©,
    { refine _ ‚â´ colimit.Œπ _ (Q.obj K),
      exact ùüô _ },
    { intros h k Œ±,
      simp,


    }


  end,
  map_id' := sorry,
  map_comp' := sorry

}

end category_theory
