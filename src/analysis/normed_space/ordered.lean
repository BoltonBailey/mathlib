import analysis.normed_space.basic
import algebra.ring.basic

open filter
open_locale topological_space

class normed_linear_ordered_group (Œ± : Type*)
extends linear_ordered_add_comm_group Œ±, has_norm Œ±, metric_space Œ± :=
(dist_eq : ‚àÄ x y, dist x y = norm (x - y))

instance normed_linear_ordered_group.to_normed_group (Œ± : Type*)
  [normed_linear_ordered_group Œ±] : normed_group Œ± :=
‚ü®normed_linear_ordered_group.dist_eq‚ü©

class normed_linear_ordered_field (Œ± : Type*)
extends linear_ordered_field Œ±, has_norm Œ±, metric_space Œ± :=
(dist_eq : ‚àÄ x y, dist x y = norm (x - y))
(norm_mul' : ‚àÄ a b, norm (a * b) = norm a * norm b)

instance normed_linear_ordered_field.to_normed_field (Œ± : Type*)
  [normed_linear_ordered_field Œ±] : normed_field Œ± :=
{ dist_eq := normed_linear_ordered_field.dist_eq,
  norm_mul' := normed_linear_ordered_field.norm_mul' }

instance normed_linear_ordered_field.to_normed_linear_ordered_group (Œ± : Type*)
[normed_linear_ordered_field Œ±] : normed_linear_ordered_group Œ± :=
‚ü®normed_linear_ordered_field.dist_eq‚ü©

lemma tendsto_pow_div_pow_at_top_of_lt {Œ± : Type*} [normed_linear_ordered_field Œ±] [order_topology Œ±]
  {p q : ‚Ñï} (hpq : p < q) : tendsto (Œª (x : Œ±), x^p / x^q) at_top (ùìù 0) :=
begin
  suffices h : tendsto (Œª (x : Œ±), x ^ ((p : ‚Ñ§) - q)) at_top (ùìù 0),
  { refine (tendsto_congr' ((eventually_gt_at_top (0 : Œ±)).mono (Œª x hx, _))).mp h,
    simp [fpow_sub hx.ne.symm] },
  rw ‚Üê neg_sub,
  rw ‚Üê int.coe_nat_sub hpq.le,
  have : 1 ‚â§ q - p := nat.sub_pos_of_lt hpq,
  exact @tendsto_pow_neg_at_top Œ± _ _ (by apply_instance) _ this,
end
